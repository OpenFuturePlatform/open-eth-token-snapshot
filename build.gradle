plugins {
    id 'jacoco'
    id 'idea'
    id 'org.jetbrains.kotlin.jvm' version '1.4.0'
    id 'org.jetbrains.kotlin.plugin.spring' version '1.4.0'
    id 'org.jetbrains.kotlin.kapt' version '1.4.0'
    id 'org.springframework.boot' version '2.3.4.RELEASE'
}

apply plugin: 'io.spring.dependency-management'

group = "io.openfuture.snapshot"
version = "0.0.1-SNAPSHOT"
java.sourceCompatibility = JavaVersion.VERSION_11

repositories {
    mavenCentral()
}

dependencies {
    //Spring
    implementation('org.springframework.boot:spring-boot-starter')
    implementation('org.springframework.boot:spring-boot-starter-validation')

    // Ethereum
    implementation('org.web3j:core:4.6.3')
    implementation('com.squareup.okhttp3:okhttp:4.8.1')

    // Kotlin
    implementation('org.jetbrains.kotlin:kotlin-reflect')
    implementation('org.jetbrains.kotlin:kotlin-stdlib-jdk8')

    // Tests
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
    testImplementation("io.projectreactor:reactor-test")
    testImplementation("com.nhaarman.mockitokotlin2:mockito-kotlin:2.2.0")

}

bootRun {
    if (project.hasProperty('args')) {
        args project.args.split(',')
    }
}

sourceSets {
    main.kotlin.srcDirs += 'src/main/kotlin'
    test.kotlin.srcDirs += 'src/test/kotlin'
}

// Kotlin
compileKotlin {
    kotlinOptions {
        freeCompilerArgs = ["-Xjsr305=strict"]
        jvmTarget = "11"
    }
}
compileTestKotlin {
    kotlinOptions {
        freeCompilerArgs = ["-Xjsr305=strict"]
        jvmTarget = "11"
    }
}

// Tests
test {
    useJUnitPlatform()

    if (project.hasProperty('maxParallelForks')) {
        maxParallelForks = project.maxParallelForks as int
    }
    if (project.hasProperty('forkEvery')) {
        forkEvery = project.forkEvery as int
    }
}
jacoco {
    toolVersion = "0.8.5"
}

check.dependsOn jacocoTestReport
